// scss-lint:disable VendorPrefix
@import "variables";

// Responsive
@mixin mobile {
  @media (max-width: #{$mobile-width - 1px}) {
    @content;
  }
}

@mixin tablet {
  @media (max-width: #{$tablet-width - 1px}) {
    @content;
  }
}

@mixin laptop {
  @media (max-width: #{$laptop-width - 1px}) {
    @content;
  }
}

@mixin desktop {
  @media (min-width: #{$desktop-width - 1px}) {
    @content;
  }
}

@mixin fh-width {
  @media (min-width: #{$fh-width - 1px}) {
    @content;
  }
}

// Visibility
@mixin visibility($type) {
  @if $type == "hidden" {
    visibility: hidden;
    opacity: 0;
    pointer-events: none;
    transition: visibility 1s, opacity 1s;
  } @else if $type == "visible" {
    visibility: visible;
    pointer-events: all;
    opacity: 1;
    transition: visibility 1s, opacity 1s;
  }
}

// Background image
@mixin bg-image {
  background-position: center;
  background-repeat: no-repeat;
  background-size: cover;
}

// Text overflow
@mixin text-overflow {
  text-overflow: ellipsis;
  overflow: hidden;
  white-space: nowrap;
}

//Animation mixin setup
@mixin keyframes($animation-name) {
  @-webkit-keyframes #{$animation-name} {
    @content;
  }
  @-moz-keyframes #{$animation-name} {
    @content;
  }
  @-ms-keyframes #{$animation-name} {
    @content;
  }
  @-o-keyframes #{$animation-name} {
    @content;
  }
  @keyframes #{$animation-name} {
    @content;
  }
}

@mixin animation($str) {
  -webkit-animation: #{$str};
  -moz-animation: #{$str};
  -ms-animation: #{$str};
  -o-animation: #{$str};
  animation: #{$str};
}

// Retina images
@mixin image-2x($image, $width, $height) {
  @media (min--moz-device-pixel-ratio: 1.3),
    (-o-min-device-pixel-ratio: 2.6/2),
    (-webkit-min-device-pixel-ratio: 1.3),
    (min-device-pixel-ratio: 1.3),
    (min-resolution: 1.3dppx) {
    background-image: url($image);
    background-size: $width $height;
  }
}

// Path fonts
$pathFonts: "../../assets/fonts";

// Fonts
@mixin font($fontName, $weight, $style, $urlName) {
  font-family: "#{$fontName}";
  src: url(#{$pathFonts}/#{$urlName}/#{$fontName}.eot);
  src: url(#{$pathFonts}/#{$urlName}/#{$fontName}.eot#iefix)
      format("embedded-opentype"),
    url(#{$pathFonts}/#{$urlName}/#{$fontName}.woff) format("woff"),
    url(#{$pathFonts}/#{$urlName}/#{$fontName}.ttf) format("truetype"),
    url(#{$pathFonts}/#{$urlName}/#{$fontName}.svg) format("svg");
  font-weight: $weight;
  font-style: $style;
  font-display: swap;
}

// Css triangle
@mixin css-triangle(
  $color,
  $direction,
  $size: 6px,
  $position: absolute,
  $round: false
) {
  @include pseudo($pos: $position);
  width: 0;
  height: 0;
  @if $round {
    border-radius: 3px;
  }
  @if $direction == down {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-top: $size solid $color;
    margin-top: 0 - round($size / 2.5);
  } @else if $direction == up {
    border-left: $size solid transparent;
    border-right: $size solid transparent;
    border-bottom: $size solid $color;
    margin-bottom: 0 - round($size / 2.5);
  } @else if $direction == right {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-left: $size solid $color;
    margin-right: -$size;
  } @else if $direction == left {
    border-top: $size solid transparent;
    border-bottom: $size solid transparent;
    border-right: $size solid $color;
    margin-left: -$size;
  }
}

// Pseudo
@mixin pseudo($display: block, $pos: absolute, $content: "") {
  content: $content;
  display: $display;
  position: $pos;
}

// Placeholder
@mixin input-placeholder {
  &.placeholder {
    @content;
  }
  &::-moz-placeholder {
    @content;
  }
  &:-ms-input-placeholder {
    @content;
  }
  &::-webkit-input-placeholder {
    @content;
  }
}

@mixin container($mw: 1330px, $px: 30px) {
  max-width: $mw;
  width: 100%;
  padding-left: $px;
  padding-right: $px;
  margin-right: auto;
  margin-left: auto;
}

@mixin display-flex($hor, $vert) {
  display: flex;
  justify-content: $hor;
  align-items: $vert;
}
